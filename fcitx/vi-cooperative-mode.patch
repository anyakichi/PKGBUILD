diff -ur fcitx-4.2.9.7/src/lib/fcitx/ime.c fcitx-4.2.9.7.new/src/lib/fcitx/ime.c
--- fcitx-4.2.9.7/src/lib/fcitx/ime.c	2019-11-07 17:13:07.000000000 +0900
+++ fcitx-4.2.9.7.new/src/lib/fcitx/ime.c	2020-04-26 09:38:43.820933996 +0900
@@ -599,7 +599,12 @@
 
 INPUT_RETURN_VALUE _DoDeactivate(FcitxInstance* instance)
 {
-    if (FcitxInstanceGetCurrentState(instance) == IS_ACTIVE) {
+    FcitxInputState *input = instance->input;
+    if (FcitxInstanceGetCurrentState(instance) == IS_ACTIVE &&
+        !(FcitxInputStateGetRawInputBufferSize(input) != 0 ||
+          FcitxMessagesGetMessageCount(input->msgPreedit) ||
+          FcitxMessagesGetMessageCount(input->msgClientPreedit) ||
+          FcitxCandidateWordGetListSize(input->candList))) {
         FcitxInstanceCloseIM(instance, instance->CurrentIC);
         return IRV_DO_NOTHING;
     }
@@ -690,7 +695,12 @@
 
 boolean _CheckDeactivate(FcitxInstance* instance)
 {
-    return FcitxInstanceGetCurrentState(instance) == IS_ACTIVE;
+    FcitxInputState* input = instance->input;
+    return FcitxInstanceGetCurrentState(instance) == IS_ACTIVE &&
+        !(FcitxInputStateGetRawInputBufferSize(input) != 0 ||
+          FcitxMessagesGetMessageCount(input->msgPreedit) ||
+          FcitxMessagesGetMessageCount(input->msgClientPreedit) ||
+          FcitxCandidateWordGetListSize(input->candList));
 }
 
 boolean _CheckSwitch(FcitxInstance* instance) {
@@ -840,6 +850,15 @@
                 if (!HAVE_IM) {
                     break;
                 }
+                if ((sym == FcitxKey_Escape && state == FcitxKeyState_None) ||
+                    (sym == FcitxKey_bracketleft && state == FcitxKeyState_Ctrl &&
+                     _CheckDeactivate(instance))) {
+                    retVal = _DoDeactivate(instance);
+                    /* force pass through */
+                    retVal = IRV_TO_PROCESS;
+                    input->keyReleased = KR_OTHER;
+                    break;
+                }
                 int i;
                 for (i = 0; i < FCITX_ARRAY_SIZE(keyHandle); i ++) {
                     if (CHECK_HOTKEY(keyHandle[i].hk) && (!keyHandle[i].check || keyHandle[i].check(instance))) {
